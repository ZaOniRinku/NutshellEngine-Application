// This file is automatically generated by generate_scriptable_factory.py from CMake

#pragma once
#include "../Core/Common/ecs/components/ntshengn_ecs_scriptable.h"
#include "../Core/scripting/ntshengn_script_keeper.h"
#include <string>

#include "camerascript.h"
#include "clownscript.h"
#include "gamecontrollerscript.h"
#include "signscript.h"
#include "titlecontrollerscript.h"

namespace NtshEngn {

	namespace ScriptableFactory {

		Scriptable createScriptable(ScriptKeeper* scriptKeeper, const std::string& scriptName) {
			Scriptable scriptable;

			if (scriptName == "CameraScript") { scriptable.script = scriptKeeper->createScript<CameraScript>(); }
			else if (scriptName == "ClownScript") { scriptable.script = scriptKeeper->createScript<ClownScript>(); }
			else if (scriptName == "GameControllerScript") { scriptable.script = scriptKeeper->createScript<GameControllerScript>(); }
			else if (scriptName == "SignScript") { scriptable.script = scriptKeeper->createScript<SignScript>(); }
			else if (scriptName == "TitleControllerScript") { scriptable.script = scriptKeeper->createScript<TitleControllerScript>(); }

			return scriptable;
		}

	}

}